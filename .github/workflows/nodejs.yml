name: Node CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '**'

jobs:
  cleanup-runs:
    runs-on: ubuntu-latest
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/master'"

  fix-lock-file:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
          persist-credentials: false # minimize exposure
      - uses: actions/setup-node@v2.1.5
        with:
          node-version: 14.x
      - name: Autofix lockfile
        run: |
          # change directory
          # assuming Angular commit style (build: bump XXX from AAA to BBB in YYY)
          # use $8 for default commit message style (Bump XXX from AAA to BBB in YYY)
          cd .`git log -1 --pretty=%s | awk '{ print $9 }'`

          # restore yarn.lock from the previous commit
          git checkout HEAD^ -- yarn.lock

          # if package.json was not updated, upgrade the dependency
          # assuming Angular commit style (build: bump XXX from ...)
          # use $2 for default commit message style (Bump XXX from ...)
          git diff --name-only HEAD^ HEAD | grep -q 'package.json' || yarn up `git log -1 --pretty=%s | awk '{ print $3 }'`

          # restore package.json from the last commit
          git checkout HEAD -- package.json

          yarn

          # deduplicate lockfile
          yarn deduplicate
        env:
          YARN_ENABLE_SCRIPTS: 0 # disable postinstall scripts
      - name: Config Git
        run: |
          # use personal access token to allow triggering new workflow
          BASIC_AUTH=$(echo -n "x-access-token:${{ secrets.GH_TOKEN }}" | base64)
          echo "::add-mask::$BASIC_AUTH"
          git config --global user.name '${{ github.event.commits[0].author.name }}'
          git config --global user.email '${{ github.event.commits[0].author.email }}'
          git config --local http.$GITHUB_SERVER_URL/.extraheader "AUTHORIZATION: basic $BASIC_AUTH"
      - name: Commit changes
        run: |
          cd .`git log -1 --pretty=%s | awk '{ print $9 }'` # ditto
          git add yarn.lock .yarn/cache .pnp.* # only add yarn.lock if not using zero-installs
          git commit -m "build(devs-dep): dependabot autofix"
          git push

  prepare-yarn-cache:
    name: Prepare yarn cache
    runs-on: ubuntu-latest
    needs: fix-lock-file

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.5
        with:
          node-version: 14.x
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2.1.4
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: yarn2-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn2-
      - name: Validate cache
        env:
          # Use PnP and disable postinstall scripts as this just needs to
          # populate the cache for the other jobs
          YARN_NODE_LINKER: pnp
          YARN_ENABLE_SCRIPTS: false
        run: yarn --immutable
